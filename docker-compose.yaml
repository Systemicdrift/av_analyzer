# docker-compose.yml
# version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: transcription_db
      POSTGRES_USER: transcription_user
      POSTGRES_PASSWORD: transcription_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U transcription_user -d transcription_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama for local LLM
  ollama:
    image: ollama/ollama:latest
    entrypoint: ["/bin/sh", "-c", "ollama serve & sleep 5 && ollama pull llama3:8b && wait"]
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_KEEP_ALIVE=24h


    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://transcription_user:transcription_password@postgres:5432/transcription_db
      - LLM_API_URL=http://ollama:11434
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./temp:/app/temp
    command: python -m uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - api
    command: serve dist

volumes:
  postgres_data:
  ollama_data: